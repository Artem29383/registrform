{"version":3,"sources":["components/FormRegistration/FormRegistration.module.css","utils/deepCopy.js","models/registrform/reducers.js","utils/getlocalStorage.js","models/registrform/actions.js","state/store.js","components/FormRegistration/input/Input.jsx","hooks/useAction.js","components/FormRegistration/input/InputContainer.jsx","utils/validators.js","utils/submitHandler.js","hooks/useSelector.js","models/registrform/selectors.js","components/FormRegistration/FormRegistration.jsx","utils/isValidFields.js","components/CompletedForm/CompletedElement.jsx","components/CompletedForm/CompletedForm.jsx","index.js","components/CompletedForm/CompletedForm.module.css"],"names":["module","exports","original","JSON","parse","stringify","initialState","dataForm","localStorage","getItem","isFormValid","isAccount","reducers","state","action","type","dataFormCopy","deepCopy","payload","value","fieldName","formValidCopy","reducer","combineReducers","formData","store","createStore","devToolsEnhancer","memo","title","typeOfInput","values","setValues","errorMessage","hFor","mask","className","classes","item","htmlFor","classnames","naming","invalid","name","id","field","onChange","useAction","dispatch","useDispatch","useCallback","InputContainer","isFormValidCheck","formValid","Math","random","setData","e","currentTarget","length","test","isValidName","isValidEmail","isValidPassword","isValidDate","console","log","isValidPhone","isValidAge","submitHandler","preventDefault","func","params","useSelector","getDataFormSelector","createSelector","getIsFormValidSelector","getIsAccountSelector","getIsAccount","FormRegistration","useSelectors","isAccountCreated","fields","InputContainers","Object","keys","map","inp","index","key","onSubmit","formRegistration","onClick","isValidFields","n","setItem","submit","complete","disabled","CompletedElement","dataFormItem","readOnly","CompletedForm","inputs","completedForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.027f3990.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRegistration\":\"FormRegistration_formRegistration__1dtnf\",\"item\":\"FormRegistration_item__2QVpP\",\"naming\":\"FormRegistration_naming__3I7fh\",\"submit\":\"FormRegistration_submit__359ty\",\"field\":\"FormRegistration_field__1onDX\",\"errorMessage\":\"FormRegistration_errorMessage__4EXQM\",\"invalid\":\"FormRegistration_invalid__qipYu\",\"complete\":\"FormRegistration_complete__3bXfh\"};","export default original => JSON.parse(JSON.stringify(original));\r\n","import { getStorage } from '../../utils/getlocalStorage';\r\nimport {\r\n  SET_DATAFORM_NAME,\r\n  SET_IS_ACCOUNT_CREATED,\r\n  SET_IS_FORM_VALID\r\n} from './actions';\r\nimport deepCopy from '../../utils/deepCopy';\r\n\r\nconst initialState = {\r\n  dataForm: getStorage(),\r\n  isFormValid: {\r\n    'name': '',\r\n    'email': '',\r\n    'password': '',\r\n    'dateOfBirth': '',\r\n    'phoneNumber': '',\r\n    'age': ''\r\n  },\r\n  isAccount: false\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    \r\n    case SET_DATAFORM_NAME: {\r\n      const dataFormCopy = deepCopy(state.dataForm);\r\n      const { value, fieldName } = action.payload;\r\n      dataFormCopy[fieldName] = value;\r\n      return {\r\n        ...state,\r\n        dataForm: dataFormCopy\r\n      };\r\n    }\r\n    \r\n    \r\n    case SET_IS_FORM_VALID: {\r\n      const formValidCopy = deepCopy(state.isFormValid);\r\n      const { value, fieldName } = action.payload;\r\n      formValidCopy[fieldName] = value;\r\n      return {\r\n        ...state,\r\n        isFormValid: formValidCopy\r\n      };\r\n    }\r\n    \r\n    \r\n    case SET_IS_ACCOUNT_CREATED:\r\n      return { ...state, isAccount: true };\r\n    \r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default reducers;","export const getStorage = () => {\r\n  if (localStorage.getItem('formData')) {\r\n    return JSON.parse(localStorage.getItem('formData'));\r\n  }\r\n  return {\r\n    'name': '',\r\n    'email': '',\r\n    'password': '',\r\n    'dateOfBirth': '',\r\n    'phoneNumber': '',\r\n    'age': ''\r\n  };\r\n};","export const SET_DATAFORM_NAME = 'SET_DATAFORM_NAME';\r\nexport const SET_IS_FORM_VALID = 'SET_IS_FORM_VALID';\r\nexport const SET_IS_ACCOUNT_CREATED = 'SET_IS_ACCOUNT_CREATED';","import {\r\n  combineReducers,\r\n  createStore\r\n} from 'redux';\r\nimport reducers from '../models/registrform/reducers';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\n\r\nconst reducer = combineReducers(\r\n  {\r\n    formData: reducers\r\n  }\r\n);\r\n\r\nconst store = createStore(reducer, /* preloadedState, */ devToolsEnhancer(\r\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\r\n));\r\nexport default store;","import React, { memo }  from 'react';\r\nimport classes from '../FormRegistration.module.css';\r\nimport classnames from 'classnames';\r\nimport InputElement from 'react-input-mask';\r\n\r\n\r\nconst Input = ({\r\n  title,\r\n  typeOfInput,\r\n  values,\r\n  setValues,\r\n  errorMessage,\r\n  hFor,\r\n  mask\r\n}) => (\r\n  <div className={classes.item}>\r\n    <label\r\n      htmlFor={hFor}\r\n      className={classnames(\r\n        classes.naming,\r\n        errorMessage && classes.invalid\r\n      )}>\r\n      {title}\r\n    </label>\r\n    <InputElement\r\n      name={title}\r\n      id={hFor}\r\n      className={classes.field}\r\n      type={typeOfInput}\r\n      value={values}\r\n      onChange={setValues}\r\n      mask = {mask}\r\n    />\r\n    <span className={classes.errorMessage}>\r\n      {errorMessage}\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default memo(Input);","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","import React, { useCallback } from 'react';\r\nimport Input from './Input';\r\nimport {\r\n  isValidAge,\r\n  isValidDate,\r\n  isValidEmail,\r\n  isValidName,\r\n  isValidPassword,\r\n  isValidPhone\r\n} from '../../../utils/validators';\r\nimport useAction from '../../../hooks/useAction';\r\nimport { SET_DATAFORM_NAME } from '../../../models/registrform/actions';\r\n\r\nconst InputContainer = ({\r\n  title,\r\n  typeOfInput,\r\n  values,\r\n  isFormValidCheck,\r\n  formValid,\r\n  name\r\n}) => {\r\n  \r\n  const hFor = `${title}-${Math.random()}`;\r\n  const setData = useAction(SET_DATAFORM_NAME);\r\n  \r\n  const setValues = useCallback((e) => {\r\n    const value = e.currentTarget.value;\r\n    setData({ value, fieldName: name });\r\n    switch (e.currentTarget.name) {\r\n      case 'Name':\r\n        isValidName(value, isFormValidCheck, 'name');\r\n        break;\r\n      case 'Email':\r\n        isValidEmail(value, isFormValidCheck, 'email');\r\n        break;\r\n      case 'Password':\r\n        isValidPassword(value, isFormValidCheck, 'password');\r\n        break;\r\n      case 'Date of Birth':\r\n        isValidDate(value, isFormValidCheck, 'dateOfBirth');\r\n        break;\r\n      case 'Phone number':\r\n        isValidPhone(value, isFormValidCheck, 'phoneNumber');\r\n        break;\r\n      case 'Age':\r\n        isValidAge(value, isFormValidCheck, 'age');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [setData, title, isFormValidCheck]);\r\n  \r\n  const masks = {\r\n    'dateOfBirth': \"99-99-9999\",\r\n    'phoneNumber': \"+7 (999) 999-99-99\"\r\n  };\r\n  return (\r\n    <Input\r\n      title={title}\r\n      typeOfInput={typeOfInput}\r\n      values={values}\r\n      setValues={setValues}\r\n      errorMessage={formValid}\r\n      hFor={hFor}\r\n      mask = {masks[name]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputContainer;","export const isValidName = (values, isFormValidCheck, title) => {\r\n  if (!values.length) {\r\n    isFormValidCheck({ value: 'Имя не может быть пустым.', fieldName: title });\r\n  } else {\r\n    (!/^[a-zA-Zа-яА-Я]+$/.test(values))\r\n      ? isFormValidCheck({ value: 'Имя может содержать только буквы.', fieldName: title })\r\n      : isFormValidCheck({ value: '', fieldName: title });\r\n  }\r\n};\r\n\r\nexport const isValidEmail = (values, isFormValidCheck, title) => {\r\n  if (!values.length) {\r\n    isFormValidCheck({ value: 'Email обязателен к заполнению.', fieldName: title });\r\n  } else {\r\n    (!/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9])+\\.([A-Za-z]{2,4})$/.test(values))\r\n      ? isFormValidCheck({ value: 'Некорректный Email.', fieldName: title })\r\n      : isFormValidCheck({ value: '', fieldName: title });\r\n  }\r\n};\r\n\r\nexport const isValidPassword = (values, isFormValidCheck, title) => {\r\n  (values.length < 6)\r\n    ? isFormValidCheck({ value: 'Пароль слишком короткий.', fieldName: title })\r\n    : isFormValidCheck({ value: '', fieldName: title });\r\n};\r\n\r\nexport const isValidDate = (values, isFormValidCheck, title) => {\r\n  (!/^\\d\\d-\\d\\d-[\\d]{4}$/.test(values))\r\n    ? isFormValidCheck({ value: 'Введите дату в формате ДД-ММ-ГГГГ.', fieldName: title })\r\n    : isFormValidCheck({ value: '', fieldName: title });\r\n};\r\n\r\nexport const isValidPhone = (values, isFormValidCheck, title) => {\r\n  console.log('err');\r\n  ((!/(\\+7\\s\\([0-9]{3}\\)\\s[0-9]{3}-[0-9]{2}-[0-9]{2})/.test(values)))\r\n    ? isFormValidCheck({ value: 'Номер состоит из 10 цифр.', fieldName: title })\r\n    : isFormValidCheck({ value: '', fieldName: title });\r\n};\r\n\r\nexport const isValidAge = (values, isFormValidCheck, title) => {\r\n  (values < 18)\r\n    ? isFormValidCheck({ value: 'Регистрация с 18 лет.', fieldName: title })\r\n    : isFormValidCheck({ value: '', fieldName: title })\r\n};","export const submitHandler = e => {\r\n  e.preventDefault();\r\n};","import { useSelector } from 'react-redux';\r\n\r\nexport default (func, params = {}) => useSelector(state => func(state, params));\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getDataForm = state => {\r\n  return state.formData.dataForm;\r\n};\r\n\r\nexport const getDataFormSelector = createSelector([getDataForm], dataForm => dataForm);\r\n\r\nconst getIsFormValid = state => {\r\n  return state.formData.isFormValid;\r\n};\r\n\r\nexport const getIsFormValidSelector = createSelector([getIsFormValid], isFormValid => isFormValid);\r\n\r\nconst getIsAccount = state => {\r\n  return state.formData.isAccount;\r\n};\r\n\r\nexport const getIsAccountSelector = createSelector([getIsAccount], getIsAccount => getIsAccount);","import React from 'react';\r\nimport classes from './FormRegistration.module.css';\r\nimport InputContainer from './input/InputContainer';\r\nimport classnames from 'classnames';\r\nimport { submitHandler } from '../../utils/submitHandler';\r\nimport useSelectors from '../../hooks/useSelector';\r\nimport {\r\n  getDataFormSelector,\r\n  getIsAccountSelector,\r\n  getIsFormValidSelector\r\n} from '../../models/registrform/selectors';\r\nimport useAction from '../../hooks/useAction';\r\nimport {\r\n  SET_IS_ACCOUNT_CREATED,\r\n  SET_IS_FORM_VALID\r\n} from '../../models/registrform/actions';\r\nimport { isValidFields } from '../../utils/isValidFields';\r\n\r\n\r\nconst FormRegistration = () => {\r\n  const dataForm = useSelectors(getDataFormSelector);\r\n  const formValid = useSelectors(getIsFormValidSelector);\r\n  const isFormValidCheck = useAction(SET_IS_FORM_VALID);\r\n  const isAccountCreated = useAction(SET_IS_ACCOUNT_CREATED);\r\n  const isAccount = useSelectors(getIsAccountSelector);\r\n  \r\n  \r\n  const setLocalStorate = () => {\r\n    if (isValidFields(dataForm, formValid)) {\r\n      for (let n in formValid) {\r\n        if (!dataForm[n]) {\r\n          isFormValidCheck({ value: `Заполните поле.`, fieldName: n })\r\n        }\r\n      }\r\n    } else {\r\n      localStorage.setItem('formData', JSON.stringify(dataForm));\r\n      isAccountCreated();\r\n    }\r\n  };\r\n  \r\n  const type = ['text', 'email', 'password', 'text', 'text', 'number'];\r\n  const fields = ['Name', 'Email', 'Password', 'Date of Birth', 'Phone number', 'Age'];\r\n  const InputContainers = Object.keys(dataForm).map((inp, index) =>\r\n    <InputContainer\r\n      key={index}\r\n      title={fields[index]}\r\n      typeOfInput={type[index]}\r\n      values={dataForm[inp]}\r\n      isFormValidCheck={isFormValidCheck}\r\n      formValid={formValid[inp]}\r\n      name = {inp}\r\n    />\r\n  );\r\n  \r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.formRegistration}>\r\n      {InputContainers}\r\n      <div className={classes.item}>\r\n        <button\r\n          onClick={setLocalStorate}\r\n          className={classnames(\r\n            classes.submit,\r\n            isAccount && classes.complete\r\n          )}\r\n          disabled={isAccount}\r\n        >\r\n          {isAccount ? '✓' : 'Create my account'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default FormRegistration;","export const isValidFields = (dataForm, formValid) => {\r\n  for (let key in dataForm) {\r\n    if (!dataForm[key] || formValid[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};","import React from 'react';\r\nimport classes from './CompletedForm.module.css';\r\n\r\nconst CompletedElement = ({ field, dataFormItem }) => (\r\n  <div className={classes.item}>\r\n    <span className={classes.naming}>{field}:</span>\r\n    <input readOnly className={classes.field} value={dataFormItem} />\r\n  </div>\r\n);\r\n\r\nexport default CompletedElement;","import React from 'react';\r\nimport classes from './CompletedForm.module.css';\r\nimport CompletedElement from './CompletedElement';\r\nimport useSelector from '../../hooks/useSelector';\r\nimport { getDataFormSelector } from '../../models/registrform/selectors';\r\n\r\nconst CompletedForm = () => {\r\n  const dataForm = useSelector(getDataFormSelector);\r\n  const fields = ['Name', 'Email', 'Password', 'Date of Birth', 'Phone Number', 'Age'];\r\n  const inputs = Object.values(dataForm).map((dataFormItem, index) =>\r\n    <CompletedElement\r\n      key={index}\r\n      field = {fields[index]}\r\n      dataFormItem={dataFormItem}\r\n    />);\r\n  \r\n  return (\r\n    <form className={classes.completedForm}>\r\n      {inputs}\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default CompletedForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './state/store';\nimport { Provider } from 'react-redux';\nimport FormRegistration from './components/FormRegistration';\nimport CompletedForm from './components/CompletedForm';\n\n\nconst App = () => (\n  <div className=\"App\">\n    <FormRegistration />\n    <CompletedForm />\n  </div>\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completedForm\":\"CompletedForm_completedForm__3OxOs\",\"item\":\"CompletedForm_item__1GneX\",\"naming\":\"CompletedForm_naming__1Bwdm\",\"field\":\"CompletedForm_field__32YQX\"};"],"sourceRoot":""}
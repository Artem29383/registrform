{"version":3,"sources":["Components/CompletedForm/CompletedForm.module.css","Components/FormToFill/FormRegistration.module.css","Components/FormToFill/Input/Input.jsx","Components/FormToFill/Input/InputContainer.jsx","Utils/validators.js","Components/FormToFill/FormRegistration.jsx","Components/CompletedForm/CompletedForm.jsx","State/Form-Reselect.js","State/Form-Reducer.js","Utils/getlocalStorage.js","App.js","State/Store.js","index.js"],"names":["module","exports","React","memo","title","typeOfInput","values","setValue","errorMessage","hFor","isFormValidCheck","useEffect","toLocaleLowerCase","className","classes","item","htmlFor","classNames","naming","invalid","name","id","field","type","value","onChange","maxLength","InputContainer","setData","useState","setErrorMessage","setValues","useCallback","e","currentTarget","length","test","isValidName","isValidEmail","isValidPassword","isValidDate","isValidPhone","Math","random","FormRegistration","dataForm","setDataFormName","setDataFormEmail","setDataFormPassword","setDataFormBirth","setDataFormPhone","isFormValid","isAccountCreated","isAccount","onSubmit","preventDefault","formRegistration","email","password","dateOfBirth","phone","onClick","localStorage","setItem","JSON","stringify","submit","complete","CompletedForm","completedForm","getDataForm","state","formData","getIsFormValid","getIsAccount","initialState","getItem","parse","formReducer","action","map","n","console","log","isValid","connect","props","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61833029.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"completedForm\":\"CompletedForm_completedForm__2cWC9\",\"item\":\"CompletedForm_item__3kKq5\",\"naming\":\"CompletedForm_naming__3vXQb\",\"field\":\"CompletedForm_field__1G2p9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRegistration\":\"FormRegistration_formRegistration__3Db97\",\"item\":\"FormRegistration_item__3pWOk\",\"naming\":\"FormRegistration_naming__lGP69\",\"submit\":\"FormRegistration_submit__25QBC\",\"field\":\"FormRegistration_field__3mwpj\",\"errorMessage\":\"FormRegistration_errorMessage__Z0ylW\",\"invalid\":\"FormRegistration_invalid__3h1at\",\"complete\":\"FormRegistration_complete__ZETju\"};","import React, { useEffect } from 'react';\r\nimport classes from '../FormRegistration.module.css';\r\nimport classNames from 'classnames';\r\n\r\nconst Input = ({\r\n\ttitle,\r\n\ttypeOfInput,\r\n\tvalues,\r\n\tsetValue,\r\n\terrorMessage,\r\n\thFor,\r\n\tisFormValidCheck\r\n}) => {\r\n\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      isFormValidCheck(false, title.toLocaleLowerCase());\r\n    } else {isFormValidCheck(true, title.toLocaleLowerCase())}\r\n  }, [errorMessage, isFormValidCheck, title]);\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={hFor}\r\n\t\t\t\tclassName={classNames(classes.naming, errorMessage && classes.invalid)}>\r\n\t\t\t\t{title}\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tname={title}\r\n\t\t\t\tid={hFor}\r\n\t\t\t\tclassName={classes.field}\r\n\t\t\t\ttype={typeOfInput}\r\n\t\t\t\tvalue={values}\r\n\t\t\t\tonChange={setValue}\r\n\t\t\t\tmaxLength='25'\r\n\t\t\t/>\r\n\t\t\t<span className={classes.errorMessage}>{errorMessage}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Input);","import React, { useState, useCallback } from 'react';\r\nimport Input from './Input';\r\nimport {isValidDate, isValidEmail, isValidName, isValidPassword, isValidPhone} from '../../../Utils/validators';\r\n\r\nconst InputContainer = ({\r\n\ttitle,\r\n\ttypeOfInput,\r\n\tvalues,\r\n\tsetData,\r\n\tisFormValidCheck\r\n}) => {\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const setValues = useCallback((e) => {\r\n    let value = e.currentTarget.value;\r\n    setData(value);\r\n    switch (e.currentTarget.name) {\r\n      case 'Name':\r\n        isValidName(value, setErrorMessage);\r\n        break;\r\n      case 'Email':\r\n        isValidEmail(value, setErrorMessage);\r\n        break;\r\n      case 'Password':\r\n        isValidPassword(value, setErrorMessage);\r\n        break;\r\n      case 'Date of Birth':\r\n        isValidDate(value, setErrorMessage);\r\n        break;\r\n      case 'Phone number':\r\n        isValidPhone(value, setErrorMessage);\r\n        break;\r\n\t    default:\r\n\t    \tbreak;\r\n    }\r\n  }, [setData]);\r\n  \r\n  const hFor = `${title}-${Math.random()}`;\r\n\t\r\n\treturn (\r\n\t\t<Input\r\n\t\t\ttitle={title}\r\n\t\t\ttypeOfInput={typeOfInput}\r\n\t\t\tvalues={values}\r\n\t\t\tsetValue={setValues}\r\n\t\t\terrorMessage={errorMessage}\r\n\t\t\thFor={hFor}\r\n\t\t\tisFormValidCheck={isFormValidCheck}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default InputContainer;","export const isValidName = (values, setErrorMessage) => {\r\n  if (!values.length) {\r\n    setErrorMessage('Имя не может быть пустым.');\r\n  } else {\r\n    (!/^[a-zA-Zа-яА-Я]+$/.test(values))\r\n      ? setErrorMessage('Имя может содержать только буквы.')\r\n      : setErrorMessage('');\r\n  }\r\n};\r\n\r\nexport const isValidEmail = (values, setErrorMessage) => {\r\n  if (!values.length) {\r\n    setErrorMessage('Email обязателен к заполнению.');\r\n  } else {\r\n    (!/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9])+\\.([A-Za-z]{2,4})$/.test(values))\r\n      ? setErrorMessage('Некорректный Email.')\r\n      : setErrorMessage('');\r\n  }\r\n};\r\n\r\nexport const isValidPassword = (values, setErrorMessage) => {\r\n  (values.length < 6)\r\n    ? setErrorMessage('Пароль слишком короткий.')\r\n    : setErrorMessage('');\r\n};\r\n\r\nexport const isValidDate = (values, setErrorMessage) => {\r\n  if (!values.length) {\r\n    setErrorMessage('Дата обязательна.');\r\n  } else {\r\n    (!/^\\d\\d.\\d\\d.[\\d]{4}$/.test(values))\r\n      ? setErrorMessage('Введите дату в формате ДД-ММ-ГГГГ.')\r\n      : setErrorMessage('');\r\n  }\r\n};\r\n\r\nexport const isValidPhone = (values, setErrorMessage) => {\r\n  ((!/(^\\+7[0-9]{10}$)|(^8[0-9]{10}$)/.test(values)))\r\n    ? setErrorMessage('Номер телефона начинается с +7 или 8 и содержит всего 11 цифр')\r\n    : setErrorMessage('');\r\n};","import React from 'react';\r\nimport classes from './FormRegistration.module.css';\r\nimport InputContainer from './Input/InputContainer';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst FormRegistration = ({\r\n  dataForm,\r\n  setDataFormName,\r\n  setDataFormEmail,\r\n  setDataFormPassword,\r\n  setDataFormBirth,\r\n  setDataFormPhone,\r\n  isFormValidCheck,\r\n  isFormValid,\r\n  isAccountCreated,\r\n  isAccount\r\n}) => {\r\n\t\r\n\tconst submitHandler = e => {\r\n\t\te.preventDefault();\r\n\t};\r\n\t\r\n\t\r\n\tconst setLocalStorate = () => {\r\n\t\tif (isFormValid[0].name &&\r\n\t\t\tisFormValid[0].email &&\r\n\t\t\tisFormValid[0].password &&\r\n\t\t\tisFormValid[0].dateOfBirth &&\r\n\t\t\tisFormValid[0].phone) {\r\n\t\t\tlocalStorage.setItem('formData', JSON.stringify(dataForm));\r\n\t\t\tisAccountCreated();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler} className={classes.formRegistration}>\r\n\t\t\t<InputContainer\r\n\t\t\t\ttitle='Name'\r\n\t\t\t\ttypeOfInput=\"text\"\r\n\t\t\t\tvalues={dataForm.name}\r\n\t\t\t\tsetData={setDataFormName}\r\n\t\t\t\tisFormValidCheck={isFormValidCheck}\r\n\t\t\t/>\r\n\t\t\t<InputContainer\r\n\t\t\t\ttitle='Email'\r\n\t\t\t\ttypeOfInput=\"email\"\r\n\t\t\t\tvalues={dataForm.email}\r\n\t\t\t\tsetData={setDataFormEmail}\r\n\t\t\t\tisFormValidCheck={isFormValidCheck}\r\n\t\t\t/>\r\n\t\t\t<InputContainer\r\n\t\t\t\ttitle='Password'\r\n\t\t\t\ttypeOfInput=\"password\"\r\n\t\t\t\tvalues={dataForm.password}\r\n\t\t\t\tsetData={setDataFormPassword}\r\n\t\t\t\tisFormValidCheck={isFormValidCheck}\r\n\t\t\t/>\r\n\t\t\t<InputContainer\r\n\t\t\t\ttitle='Date of Birth'\r\n\t\t\t\ttypeOfInput=\"text\"\r\n\t\t\t\tvalues={dataForm.dateOfBirth}\r\n\t\t\t\tsetData={setDataFormBirth}\r\n\t\t\t\tisFormValidCheck={isFormValidCheck}\r\n\t\t\t/>\r\n\t\t\t<InputContainer\r\n\t\t\t\ttitle='Phone number'\r\n\t\t\t\ttypeOfInput=\"text\"\r\n\t\t\t\tvalues={dataForm.phone}\r\n\t\t\t\tsetData={setDataFormPhone}\r\n\t\t\t\tisFormValidCheck={isFormValidCheck}\r\n\t\t\t/>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={setLocalStorate}\r\n\t\t\t\t\tclassName={classNames(classes.submit, isAccount && classes.complete)}>\r\n\t\t\t\t\t{isAccount ? '✓' : 'Create my account'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nexport default FormRegistration;","import React from 'react';\r\nimport classes from './CompletedForm.module.css';\r\n\r\nconst CompletedForm = ({dataForm}) => {\r\n\treturn (\r\n\t\t<form className={classes.completedForm}>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<span className={classes.naming}>Name:</span>\r\n\t\t\t\t<span className={classes.field}>{dataForm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<span className={classes.naming}>Email:</span>\r\n\t\t\t\t<span className={classes.field}>{dataForm.email}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<span className={classes.naming}>Password:</span>\r\n\t\t\t\t<span className={classes.field}>{dataForm.password}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<span className={classes.naming}>Date of Birth:</span>\r\n\t\t\t\t<span className={classes.field}>{dataForm.dateOfBirth}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t<span className={classes.naming}>Phone number:</span>\r\n\t\t\t\t<span className={classes.field}>{dataForm.phone}</span>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nexport default CompletedForm;","export const getDataForm = state => {\r\n  return state.formData.dataForm;\r\n};\r\n\r\nexport const getIsFormValid = state => {\r\n  return state.formData.isFormValid;\r\n};\r\n\r\nexport const getIsAccount = state => {\r\n  return state.formData.isAccount;\r\n};","import {getStorage} from \"../Utils/getlocalStorage\";\r\n\r\nconst SET_DATAFORM_NAME = 'SET_DATAFORM_NAME';\r\nconst SET_DATAFORM_EMAIL = 'SET_DATAFORM_EMAIL';\r\nconst SET_DATAFORM_PASSWORD = 'SET_DATAFORM_PASSWORD';\r\nconst SET_DATAFORM_DATE_OF_BIRTH = 'SET_DATAFORM_DATE_OF_BIRTH';\r\nconst SET_DATAFORM_PHONE = 'SET_DATAFORM_PHONE';\r\nconst SET_IS_FORM_VALID = 'SET_IS_FORM_VALID';\r\nconst SET_IS_ACCOUNT_CREATED = 'SET_IS_ACCOUNT_CREATED';\r\n\r\nlet initialState = {\r\n  dataForm: getStorage(),\r\n  isFormValid: [{\r\n    name: false,\r\n    email: false,\r\n    password: false,\r\n    dateOfBirth: false,\r\n    phone: false\r\n  }],\r\n  isAccount: false\r\n};\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATAFORM_NAME:\r\n      return {\r\n        ...state, dataForm: state.dataForm.map(n => {\r\n          return {...n, name: action.name}\r\n        })\r\n      };\r\n    case SET_DATAFORM_EMAIL:\r\n      return {\r\n        ...state, dataForm: state.dataForm.map(n => {\r\n          return {...n, email: action.email}\r\n        })\r\n      };\r\n    case SET_DATAFORM_PASSWORD:\r\n      return {\r\n        ...state, dataForm: state.dataForm.map(n => {\r\n          return {...n, password: action.password}\r\n        })\r\n      };\r\n    case SET_DATAFORM_DATE_OF_BIRTH:\r\n      return {\r\n        ...state, dataForm: state.dataForm.map(n => {\r\n          return {...n, dateOfBirth: action.dateOfBirth}\r\n        })\r\n      };\r\n    case SET_DATAFORM_PHONE:\r\n      return {\r\n        ...state, dataForm: state.dataForm.map(n => {\r\n          return {...n, phone: action.phone}\r\n        })\r\n      };\r\n    case SET_IS_FORM_VALID: {\r\n      return {\r\n        ...state, isFormValid: state.isFormValid.map(n => {\r\n          console.log(n);\r\n          if ('name' === action.field) return {...n, name: action.isValid};\r\n          if ('email' === action.field) return {...n, email: action.isValid};\r\n          if ('password' === action.field)  return {...n, password: action.isValid};\r\n          if ('date of birth' === action.field) return {...n, dateOfBirth: action.isValid};\r\n          if ('phone number' === action.field)  return {...n, phone: action.isValid};\r\n          else {return {...n}}\r\n        })\r\n      };\r\n    }\r\n    case SET_IS_ACCOUNT_CREATED:\r\n    return {...state, isAccount: true};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setDataFormName = (name) => ({type: SET_DATAFORM_NAME, name});\r\nexport const setDataFormEmail = (email) => ({type: SET_DATAFORM_EMAIL, email});\r\nexport const setDataFormPassword = (password) => ({type: SET_DATAFORM_PASSWORD, password});\r\nexport const setDataFormBirth = (dateOfBirth) => ({type: SET_DATAFORM_DATE_OF_BIRTH, dateOfBirth});\r\nexport const setDataFormPhone = (phone) => ({type: SET_DATAFORM_PHONE, phone});\r\nexport const isFormValidCheck = (isValid, field) => ({type: SET_IS_FORM_VALID, isValid, field});\r\nexport const isAccountCreated = () => ({type: SET_IS_ACCOUNT_CREATED});\r\n\r\nexport default formReducer;","export const getStorage = () => {\r\n  if (localStorage.getItem('formData')) {\r\n    return [JSON.parse(localStorage.getItem('formData'))];\r\n  }\r\n  return [{\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    dateOfBirth: '',\r\n    phone: ''\r\n  }];\r\n};","import React from 'react';\nimport './App.css';\nimport FormRegistration from './Components/FormToFill/FormRegistration';\nimport CompletedForm from './Components/CompletedForm/CompletedForm';\nimport {connect} from 'react-redux';\nimport {getDataForm, getIsAccount, getIsFormValid} from './State/Form-Reselect';\nimport {\n  isAccountCreated,\n  isFormValidCheck,\n  setDataFormBirth,\n  setDataFormEmail,\n  setDataFormName,\n  setDataFormPassword,\n  setDataFormPhone\n} from './State/Form-Reducer';\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <FormRegistration\n        dataForm={props.dataForm[0]}\n        setDataFormName={props.setDataFormName}\n        setDataFormEmail = {props.setDataFormEmail}\n        setDataFormPassword={props.setDataFormPassword}\n        setDataFormBirth={props.setDataFormBirth}\n        setDataFormPhone={props.setDataFormPhone}\n        isFormValidCheck = {props.isFormValidCheck}\n        isFormValid = {props.isFormValid}\n        isAccountCreated = {props.isAccountCreated}\n        isAccount = {props.isAccount}\n      />\n      <CompletedForm dataForm={props.dataForm[0]}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    dataForm: getDataForm(state),\n    isFormValid: getIsFormValid(state),\n    isAccount: getIsAccount(state)\n  }\n};\n\nexport default connect(mapStateToProps, {\n  setDataFormName,\n  setDataFormEmail,\n  setDataFormPassword,\n  setDataFormBirth,\n  setDataFormPhone,\n  isFormValidCheck,\n  isAccountCreated\n})(App);\n","import { combineReducers, createStore } from \"redux\";\r\nimport formReducer from \"./Form-Reducer\";\r\n\r\nconst reducer = combineReducers(\r\n  {\r\n    formData: formReducer\r\n  }\r\n);\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './State/Store';\n\nReactDOM.render(<App store = {store} />, document.getElementById('root'));\n"],"sourceRoot":""}